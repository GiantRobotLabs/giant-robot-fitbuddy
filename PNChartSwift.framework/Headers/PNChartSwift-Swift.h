// Generated by Apple Swift version 1.2 (swiftlang-602.0.49.3 clang-clang-602.0.49)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if defined(__has_include) && __has_include(<uchar.h>)
# include <uchar.h>
#elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
#endif

typedef struct _NSZone NSZone;

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted) 
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
#endif
#if __has_feature(nullability)
#  define SWIFT_NULLABILITY(X) X
#else
# if !defined(__nonnull)
#  define __nonnull
# endif
# if !defined(__nullable)
#  define __nullable
# endif
# if !defined(__null_unspecified)
#  define __null_unspecified
# endif
#  define SWIFT_NULLABILITY(X)
#endif
#if defined(__has_feature) && __has_feature(modules)
@import UIKit;
@import CoreGraphics;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class NSArray;
@class UIColor;
@class CAShapeLayer;
@class UIFont;
@class NSObject;
@class UIEvent;
@class NSCoder;

SWIFT_CLASS("_TtC12PNChartSwift10PNBarChart")
@interface PNBarChart : UIView
@property (nonatomic) NSArray * __nonnull xLabels;
@property (nonatomic) NSArray * __nonnull yValues;
@property (nonatomic) UIColor * __nonnull strokeColor;
@property (nonatomic) NSArray * __nonnull strokeColors;
@property (nonatomic) CGFloat xLabelHeight;
@property (nonatomic) CGFloat yLabelHeight;
@property (nonatomic) CGFloat yChartLabelWidth;
@property (nonatomic) CGFloat chartMargin;
@property (nonatomic) BOOL showLabel;
@property (nonatomic) BOOL showChartBorder;
@property (nonatomic) CAShapeLayer * __nonnull chartBottomLine;
@property (nonatomic) CAShapeLayer * __nonnull chartLeftLine;
@property (nonatomic) CGFloat barRadius;
@property (nonatomic) CGFloat labelMarginTop;
@property (nonatomic) UIColor * __nonnull barBackgroundColor;
@property (nonatomic) UIColor * __nonnull labelTextColor;
@property (nonatomic) UIFont * __nonnull labelFont;
@property (nonatomic) NSInteger xLabelSkip;
@property (nonatomic) NSInteger yLabelSum;
- (void)strokeChart;
- (void)touchesBegan:(NSSet * __nonnull)touches withEvent:(UIEvent * __nonnull)event;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class NSString;

SWIFT_CLASS("_TtC12PNChartSwift11PNLineChart")
@interface PNLineChart : UIView
@property (nonatomic) NSArray * __nonnull xLabels;
@property (nonatomic) NSArray * __nonnull yLabels;

/// <ul><li><p>Array of <code>LineChartData</code> objects, one for each line.</p></li></ul>
@property (nonatomic) NSArray * __nonnull chartData;
@property (nonatomic) CGFloat xLabelWidth;
@property (nonatomic) CGFloat yValueMax;
@property (nonatomic) CGFloat yValueMin;
@property (nonatomic) CGFloat yLabelNum;
@property (nonatomic) CGFloat yLabelHeight;
@property (nonatomic) CGFloat chartMargin;
@property (nonatomic) BOOL showLabel;
@property (nonatomic) BOOL showCoordinateAxis;
@property (nonatomic) UIColor * __nonnull axisColor;
@property (nonatomic) CGFloat axisWidth;
@property (nonatomic) NSString * __null_unspecified xUnit;
@property (nonatomic) NSString * __null_unspecified yUnit;

/// <ul><li><p>String formatter for float values in y labels. If not set, defaults to @"%1.f"</p></li></ul>
@property (nonatomic) NSString * __nonnull yLabelFormat;
- (void)touchesBegan:(NSSet * __nonnull)touches withEvent:(UIEvent * __nonnull)event;
- (void)touchesMoved:(NSSet * __nonnull)touches withEvent:(UIEvent * __nonnull)event;

/// <ul><li><p>This method will call and troke the line in animation</p></li></ul>
- (void)strokeChart;
- (void)drawRect:(CGRect)rect;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

#pragma clang diagnostic pop
